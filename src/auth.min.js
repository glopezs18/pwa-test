import{CognitoUserPool,CognitoUser,AuthenticationDetails}from"amazon-cognito-identity-js";const userPool=new CognitoUserPool({UserPoolId:process.env.REACT_APP_USER_POOL_ID,ClientId:process.env.REACT_APP_CLIENT_ID});export function signUp(username,email,password){return new Promise((resolve,reject)=>{userPool.signUp(username,password,[{Name:"email",Value:email}],null,(err,result)=>{err?reject(err):resolve(result.user)})})}export function confirmSignUp(email,code){return new Promise((resolve,reject)=>{const cognitoUser=new CognitoUser({Username:email,Pool:userPool});cognitoUser.confirmRegistration(code,!0,(err,result)=>{err?reject(err):resolve(result)})})}export function signIn(email,password){return new Promise((resolve,reject)=>{const authenticationDetails=new AuthenticationDetails({Username:email,Password:password}),cognitoUser=new CognitoUser({Username:email,Pool:userPool});cognitoUser.authenticateUser(authenticationDetails,{onSuccess:result=>{resolve(result)},onFailure:err=>{reject(err)}})})}export function forgotPassword(email){return new Promise((resolve,reject)=>{const cognitoUser=new CognitoUser({Username:email,Pool:userPool});cognitoUser.forgotPassword({onSuccess:()=>{resolve()},onFailure:err=>{reject(err)}})})}export function confirmPassword(email,confirmationCode,newPassword){return new Promise((resolve,reject)=>{const cognitoUser=new CognitoUser({Username:email,Pool:userPool});cognitoUser.confirmPassword(confirmationCode,newPassword,{onSuccess:()=>{resolve()},onFailure:err=>{reject(err)}})})}export function signOut(){const cognitoUser=userPool.getCurrentUser();cognitoUser&&cognitoUser.signOut()}export async function getCurrentUser(){return new Promise((resolve,reject)=>{const cognitoUser=userPool.getCurrentUser();cognitoUser?cognitoUser.getSession((err,session)=>{err?reject(err):cognitoUser.getUserAttributes((err,attributes)=>{if(err)return void reject(err);const userData=attributes.reduce((acc,attribute)=>(acc[attribute.Name]=attribute.Value,acc),{});resolve({...userData,username:cognitoUser.username})})}):reject(new Error("No user found"))})}export function getSession(){const cognitoUser=userPool.getCurrentUser();return new Promise((resolve,reject)=>{cognitoUser?cognitoUser.getSession((err,session)=>{err?reject(err):resolve(session)}):reject(new Error("No user found"))})}
//# sourceMappingURL=auth.min.js.map